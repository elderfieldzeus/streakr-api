generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Activity {
  id          BigInt    @id @default(autoincrement())
  name        String?   @db.VarChar
  description String?   @db.VarChar
  counter     BigInt?   @default(0)
  is_private  Boolean?  @default(false)
  user_id     BigInt?
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamp(6)
  User        User?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Log         Log[]
}

model Image {
  id         BigInt    @id @default(autoincrement())
  name       String?   @db.VarChar
  url        String?   @db.VarChar
  log_id     BigInt?
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamp(6)
  Log        Log?      @relation(fields: [log_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Log {
  id           BigInt    @id @default(autoincrement())
  date         DateTime? @default(now()) @db.Timestamp(6)
  is_continued Boolean?  @default(false)
  activity_id  BigInt?
  created_at   DateTime  @default(now()) @db.Timestamptz(6)
  deleted_at   DateTime? @db.Timestamp(6)
  Image        Image[]
  Activity     Activity? @relation(fields: [activity_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model User {
  id         BigInt     @id @default(autoincrement())
  username   String?    @db.VarChar
  email      String?    @db.VarChar
  password   String?    @db.VarChar
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  deleted_at DateTime?  @db.Timestamp(6)
  Activity   Activity[]
}
